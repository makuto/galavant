{
    // You'll need to replace all instances of /home/macoy/Development/code/3rdParty/repositories/UnrealEngine
    //  and /media/macoy/SSD/Development/code/3rdParty/repositories/UnrealEngine with your Unreal 
    //  Engine install location. There may be other folders that need correction
    // You'll also need to copy JamUnrealBuildOutput.sublime-syntax to your Sublime User folder 
    //  (Preferences -> Browse Packages... -> User) to build using the provided build systems
    "folders":
    [
        {
            "path": "../../../../galavant",
            "name": "Galavant",
            "folder_exclude_patterns": ["project", "thirdParty"],
            "file_include_patterns": ["*.c", "*.cpp", "*.h", "*.hpp", "*.txt", "Jam*", "*.md", "*.tasks"]
        },
        {
            "path": "../../../../galavant-unreal/GalavantUnreal/Source",
            "name": "Source - Galavant Unreal",
            "file_include_patterns": ["*.c", "*.cpp", "*.h", "*.hpp", "*.txt", "*.cs", "*.md", "*.sh"]
        },
        {
            "path": "../../../gamedata",
            "name": "Game Data"
        },
        {
            "path": "../../../data",
            "name": "Data"
        },
        {
            "path": "../../../assets",
            "name": "Assets"
        },
        // Note that Unreal and other 3rd Party sources come after our folders; this means Galavant 
        //  results will appear first when doing things like ctrl+p, which is what we want
        {
            "path": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/Engine/Source",
            "name": "Unreal Engine Source",
            "folder_exclude_patterns": ["ThirdParty"],
            "file_include_patterns": ["*.c", "*.cpp", "*.h", "*.hpp", "*.txt", "Jam*", "*.md"]
        },
        {
            "path": "../../../../galavant/thirdParty",
            "name": "Third Party - Galavant",
            "file_include_patterns": ["*.c", "*.cpp", "*.h", "*.hpp", "*.txt", "Jam*", "*.md"]
        },
        {
            "path": "../../../../galavant-unreal/GalavantUnreal",
            "name": "Config - Galavant Unreal",
            "file_include_patterns": ["*.ini"]
        },
    ],
    
    "build_systems":
    [
        // For galavant/, use
        // "working_dir": "$project_path/../../.."
        // Not sure why, but Sublime will actually keep going up across builds if you just do ../ first

        //
        // "Full build". This is what you want to run normally.
        // Note that if you are using the Unreal Editor you're not running the targets
        //  GalavantUnreal is making; you're only using the Galavant library
        {
            "name": "Full Build (build Galavant lib and Unreal)",
            "shell_cmd": "cd galavant && jam -j4 -q -sUNREAL=true GalavantPseudotarget && cd ../galavant-unreal/GalavantUnreal && make GalavantUnreal",
            "working_dir": "$project_path/../../../..",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "Full Build Debug (build Galavant lib and Unreal)",
            "shell_cmd": "cd galavant && jam -j4 -q -sUNREAL=true GalavantPseudotarget && cd ../galavant-unreal/GalavantUnreal && make GalavantUnreal-Linux-Debug",
            "working_dir": "$project_path/../../../..",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        //
        // Galavant Unreal
        //
        {
            "name": "GalavantUnreal Build",
            "shell_cmd": "make GalavantUnreal",
            "working_dir": "$project_path/../../../../galavant-unreal/GalavantUnreal",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "GalavantUnreal Build Debug",
            "shell_cmd": "make GalavantUnreal-Linux-Debug",
            "working_dir": "$project_path/../../../../galavant-unreal/GalavantUnreal",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        // This is useful when it complains that Linux headers have changed
        {
            "name": "GalavantUnreal Quick Clean (linux headers changed error fix)",
            "shell_cmd": "rm -r Intermediate/Build",
            "working_dir": "$project_path/../../../../galavant-unreal/GalavantUnreal"
        },

        {
            "name": "GalavantUnreal Fix 'Game Module Could Not Be Loaded' (DOESN'T WORK)",
            "shell_cmd": "rm -r Binaries/Linux",
            "working_dir": "$project_path/../../../../galavant-unreal/GalavantUnreal"
        },

        // TODO: @Hack: Need to figure out why this .so isn't being copied automatically
        {
            "name": "GalavantUnreal Fix 'Game Module Could Not Be Loaded' (MAYBE WORKS)",
            "shell_cmd": "cp /media/macoy/SSD/Development/code/3rdParty/repositories/UnrealEngine/Engine/Plugins/Runtime/CustomMeshComponent/Binaries/Linux/libUE4Editor-CustomMeshComponent-Linux-Debug.so Binaries/Linux",
            "working_dir": "$project_path/../../../../galavant-unreal/GalavantUnreal"
        },

        {
            "name": "GalavantUnreal Generate Project Files (Makefile; No VSCode)",
            // I don't think I need to build a custom version of the editor
            // "shell_cmd": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/GenerateProjectFiles.sh -project=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject -game -editor",
            "shell_cmd": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/GenerateProjectFiles.sh -project=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject -game",
            "working_dir": "$project_path/../../../../galavant-unreal/GalavantUnreal",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "GalavantUnreal Generate Project Files (VSCode; No Makefile)",
            // I don't think I need to build a custom version of the editor
            // "shell_cmd": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/GenerateProjectFiles.sh -project=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject -game -editor",
            "shell_cmd": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/GenerateProjectFiles.sh -project=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject -game -vscode",
            "working_dir": "$project_path/../../../../galavant-unreal/GalavantUnreal",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        //
        // GalavantUnreal Standalone
        //

        {
            "name": "GalavantUnreal Standalone Package",
            "shell_cmd": "mono AutomationTool.exe -ScriptsForProject=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject BuildCookRun -nocompile -nocompileeditor -nop4 -project=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject -cook -stage -archive -archivedirectory=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/LOCAL_package/package/ -package -clientconfig=Development -ue4exe=UE4Editor-Linux-Debug -pak -prereqs -nodebuginfo -nativizeAssets -targetplatform=Linux -build -utf8output",
            "working_dir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/Engine/Binaries/DotNET",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "GalavantUnreal Standalone Package Debug",
            "shell_cmd": "mono AutomationTool.exe -ScriptsForProject=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject BuildCookRun -nocompile -nocompileeditor -nop4 -project=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject -cook -stage -archive -archivedirectory=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/LOCAL_package/package/ -package -clientconfig=DebugGame -ue4exe=UE4Editor-Linux-Debug -pak -prereqs -nodebuginfo -nativizeAssets -targetplatform=Linux -build -utf8output",
            "working_dir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/Engine/Binaries/DotNET",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "GalavantUnreal Cook (Maybe doesn't work)",
            "shell_cmd": "mono AutomationTool.exe BuildCookRun -nocompileeditor -nop4 -project=/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject -cook -skipstage -ue4exe=UE4Editor -targetplatform=Linux -utf8output",
            "working_dir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/Engine/Binaries/DotNET",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "Standalone Full Build Debug (build Galavant lib and Unreal)",
            "shell_cmd": "cd galavant && jam -j4 -q -sUNREAL=true GalavantPseudotarget && cd ../galavant-unreal/GalavantUnreal && make GalavantUnreal-Linux-Debug && cp -r -u -v Binaries/ LOCAL_package/package/LinuxNoEditor/GalavantUnreal/",
            "working_dir": "$project_path/../../../..",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        //
        // Unreal Engine
        //
        {
            "name": "Unreal Engine Get Latest and Build (No debug)",
            "shell_cmd": "guake -n UnrealLatest -e \"cd /home/macoy/Development/code/3rdParty/repositories/UnrealEngine && git pull && ./Setup.sh && ./GenerateProjectFiles.sh && make\"",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "Unreal Engine Get Latest and Build (Also debug)",
            "shell_cmd": "guake -n UnrealLatest -e \"cd /home/macoy/Development/code/3rdParty/repositories/UnrealEngine && git pull && ./Setup.sh && ./GenerateProjectFiles.sh && make UE4Editor UE4Editor-Linux-Debug\"",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "Unreal Engine Build",
            "shell_cmd": "make",
            "working_dir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "Unreal Engine Build Debug",
            "shell_cmd": "make UE4Editor-Linux-Debug",
            "working_dir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        {
            "name": "Unreal Engine Run (no debug)",
            "shell_cmd": "./Engine/Binaries/Linux/UE4Editor",
            "working_dir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine",
            //"working_dir": "/home/macoy/Downloads/UnrealEngine",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        //
        // Jam
        //
        {
            "name": "Jam Current Directory",
            "shell_cmd": "jam -j4 -q",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },
        {
            "name": "Jam Clean All",
            "shell_cmd": "jam clean",
            "working_dir": "$project_path/../../..",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },
        {
            "name": "Jam Build (not Unreal)",
            "shell_cmd": "jam -j4 -q",
            "working_dir": "$project_path/../../..",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },
        {
            "name": "Jam Build Unreal",
            "shell_cmd": "jam -j4 -q -sUNREAL=true GalavantPseudotarget",
            "working_dir": "$project_path/../../..",
            "file_regex": "^([a-zA-Z\/][^:\n]*):([0-9]+):?([0-9]+)?:? (.*)$",
            "syntax":"JamUnrealBuildOutput.sublime-syntax"
        },

        //
        // Convenience for Macoy (Guake is my terminal)
        //guake -n MyTabName -e "command args"
        {
            "name": "Guake Galavant",
            "shell_cmd": "guake -n Galavant -e \"cd Development/code/repositories/galavant\"",
        },
        {
            "name": "Guake Galavant Unreal",
            "shell_cmd": "guake -n GalavantUnreal -e \"cd Development/code/repositories/galavant-unreal/GalavantUnreal\"",
        },

        //
        // Misc. Commands
        //
        {
        	"name": "Compile C++11 File",
		    "cmd": ["g++", "-c", "-std=c++11", "-g", "-Os", "-Wall", "$file"],
		    "file_regex": "^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$",
		    "selector": "source.c++"
        },
        {
            "name": "Build All Experiments",
            "shell_cmd": "make",
            "working_dir": "$project_path/../../../src/experiments"
        },
        {
            "name": "List",
            "shell_cmd": "ls -l",
            "working_dir": "$project_path/../../.."
        },
    ],

    "settings":
    {
        "sublimegdb_executables":
        {
            "UnrealEditor":
            {
                // Find and attach to running UE4 instance:
                // sudo gdb /home/macoy/Development/code/3rdParty/repositories/UnrealEngine/Engine/Binaries/Linux/UE4Editor $(ps -A | grep UE4Editor | awk '{print $1;}')
                
                "workingdir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/Engine/Binaries/Linux",
                "commandline": "gdb --interpreter=mi ./UE4Editor /home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject"
            },

            "UnrealEditor Debug":
            {
               "workingdir": "/home/macoy/Development/code/3rdParty/repositories/UnrealEngine/Engine/Binaries/Linux",
               "commandline": "gdb --interpreter=mi ./UE4Editor-Linux-Debug /home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal/GalavantUnreal.uproject"
            },

            "GalavantUnreal Standalone":
            {
               "workingdir": "/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal",
               "commandline": "gdb --interpreter=mi --args ./LOCAL_package/package/LinuxNoEditor/GalavantUnreal/Binaries/Linux/GalavantUnreal -windowed -resx=1920 -resy=1080"
            },

            "GalavantUnreal Standalone Debug":
            {
               "workingdir": "/home/macoy/Development/code/repositories/galavant-unreal/GalavantUnreal",
               "commandline": "gdb --interpreter=mi --args ./LOCAL_package/package/LinuxNoEditor/GalavantUnreal/Binaries/Linux/GalavantUnreal-Linux-Debug -windowed -resx=1920 -resy=1080"
            },

            //"htnTest":
            //{
            //    "workingdir": "../../../bin",
            //    "commandline": "gdb --interpreter=mi ./htnTest"
            //},
        },
    }
}